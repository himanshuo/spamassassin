what will this be used to determine spam or not? wiki, basic things on website



next steps:
1) use tornado + asyncio with python3                                                                   DONE
    make async
2)WILL SEND TEXT directly through post request.                                                         DONE
3)determine spamd size limit.                                                                           DONE
     DEFAULT MAX MESSAGE SIZE : 500 KB)
     CAN CUSTOMIZE TO MAKE IT MAX SIZE : 256 MB
        size is specified in bytes, as a positive integer greater than 0.
            For example, -s 500000
        CONF SETTING IS:
            -s max_size, --max-size=max_size
               can specify this in spamc/spamd config files.

	3.5) if too much then send in batches.
4)determine best practices for using subprocess with tornado                                            DONE
5) edit settings to not use email header info                                                           DONE
    STEPS:
        1) make edits to config file
            sudo vim /etc/spamassassin/local.cf
               (NOTE: there is a backup of this file in the same directory called local.cf.backup)
        2) restart spamassassin service using
            sudo /etc/init.d/spamassassin restart
        3)spamc < filename.txt
            (spamc -c <filename.txt to only see the score/neccesssary_to_consider_spam_score)
6)train spamassassin using osf data                                                                     DONE
        sudo sa-learn --progress --ham HAMFOLDER/*
        sudo sa-learn --sync

        then, to see the contents of the spam db: (note, spamassassin basically turns messages into hashes.)
        sudo sa-learn --dump [all|magic|data]

7)figure out how to improve learning capabilities:
    1) generate a "message" in the form of an email.                                                    DONE
        supplied text or html data is message body
        key:value pairs of metadata can be header.
            things to include in header:
                author: commenter name
                email: commenter email
                subject: project on which person is
                ip: ip address of author.
                Content-Type: text/plain
            can use url params as header directly and add auto headers.
            FROM TESTING, WHICH HEADERS ARE NECCESSARY:
    2) change spamassassin settings to what
            http://search.cpan.org/~robn/Text-SpamAssassin-2.001/lib/Text/SpamAssassin.pm describes     DONE
        1)ignore DUN/DUL ip addressess
        2)https://github.com/robn/Text-SpamAssassin/blob/master/examples/comment_spam_prefs.cf          DONE
        3)# percent HTML - what should these be? LET LEARNING THING DO IT                               DONE(learned)
        score HTML_00_10		0
        score HTML_10_20		0
        score HTML_20_30		0
        score HTML_30_40		0
        score HTML_40_50		0
        score HTML_50_60		0
        score HTML_60_70		0
        score HTML_70_80		0
        score HTML_80_90		0
        score HTML_90_100		0
        4)score DNS_FROM_RFCI_DSN		0                                                                DONE
        5)score RCVD_IN_NJABL_DUL 0                                                                      DONE
        score RCVD_IN_SORBS_DUL 0                                                                        DONE
        score RCVD_IN_MAPS_DUL 0                                                                         DONE
    3) give more than just spam or ham output. GIVE ANALYTICS!!! EASY AND LOOKS GOOD (if user specifies full_report). DONE
8) you can make seperate endpoints for different types of osf data: comments/ titles/ wikis/ ...
REMEMBER WHAT THE ENTREPENEURSHIP GUY SAID: DO STUFF. IT MAKES PEOPLE THINK YOU ARE LEGIT. JUST KEEP PRODUCING MORE CONTENT!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
9) AUTOLEARNING                                                                                          DONE(autolearn if header>3 body>3 in either direction.)
10)user says to learn
    --procedure to allow for sa-learn sudo usage is described in the following link:
    http://askubuntu.com/questions/155791/how-do-i-sudo-a-command-in-a-script-without-being-asked-for-a-password
    --the file used for this is called call_sa-learn.sh. I made it 777 for our purposes. This is NOT
    safe for production.
11)file input
12)multilanguage support                                                                                 DONE



Confident that spamd is running in parallel                                                             DONE
https://svn.apache.org/repos/asf/spamassassin/branches/3.4/spamd/README section on performance.
    just need to determine num max-children running in parallel on my machine.
       using a special algorithm that maximizes this value.
       FOR TESTING, will make min parallel processes 3 and max 5. Note: these are "children"
            file to do this is: sudo vim /etc/default/spamassassin

            Can check that they are running in parallel using sandbox.sh


what to understand about async and tornado. with tornado,
    you DO NOT actually make it so users are put on different threads.
    INSTEAD, everyone comes to a single thread AND their action is put on the ioloop.
    their action is run. Others actions are also run. While running, the ioloop does not care whats happening.
    the ioloop accepts more requests and just adds them onto the queue of things to do.
    THUS you basically have multiple people getting things done on the same thread concurrently.
    The ioloop is also always listening. if someone finishes a task, the ioloop runs the appropriate code for when that task is finished.





TEST RESULTS
    for large file input (488KB. max is 500KB), 5 threads with 5  calls each, async takes avg of 29s and sync 61s
    for normal input (500 bytes), 5 threads with 20 calls each- async: sync:



